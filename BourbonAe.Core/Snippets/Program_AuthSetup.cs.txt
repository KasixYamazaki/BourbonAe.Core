// In Program.cs:

using Microsoft.AspNetCore.Authentication.Cookies;
using BourbonAe.Core.Services.Auth;
using Microsoft.EntityFrameworkCore;

// Cookie Auth
builder.Services.AddAuthentication(options =>
{
    options.DefaultAuthenticateScheme = CookieAuthenticationDefaults.AuthenticationScheme;
    options.DefaultChallengeScheme = CookieAuthenticationDefaults.AuthenticationScheme;
    options.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;
})
.AddCookie(options =>
{
    options.LoginPath = "/Account/Login";
    options.LogoutPath = "/Account/Logout";
    options.AccessDeniedPath = "/Account/Login";
    options.SlidingExpiration = true;
    options.ExpireTimeSpan = TimeSpan.FromHours(8);
});

// EF Core DbContext & IAppDb bridge
// builder.Services.AddDbContext<ApplicationDbContext>(o => o.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
// builder.Services.AddScoped<IAppDb>(sp => sp.GetRequiredService<ApplicationDbContext>());

// Auth Service
builder.Services.AddScoped<IAuthService, AuthService>();

// MVC
builder.Services.AddControllersWithViews();

// In app pipeline:
app.UseAuthentication();
app.UseAuthorization();
